<?php
namespace alizephp;

/**
 * Exception class for the alizephp package. It adds stderr and command to the basic
 * properties of parent class Exception.
 * 
 * @author HÃ©ctor Pablos
 *
 */
class AlizePHPException extends \Exception {

	/**
	 * Stores the command that threw this exception, if any.
	 * @var string
	 */
	private $command;
	
	/**
	 * If the exception was threw by a command, stores the stderr string generated by it
	 * @var string
	 */
	private $stderr;
	
	/**
	 * Creates an AlizePHPException
	 * @param string $message Message of the exception, if the exception is originated in a command,
	 * it should store the stdout of that command
	 * @param string $command Command that threw this exception, if any.
	 * @param string $stderr Stderr of the command that threw the exception, if any.
	 * @param string $code Code of the exception. If might be the return value of the command that threw
	 * the exception, if any.
	 */
	public function __construct($message=null,$command=null,$stderr=null,$code=null) {
		$this->command = $command;
		$this->stderr = $stderr;
		parent::__construct($message,$code,null);
	}
	
	/**
	 * Returns executable name and parameters of the command that threw the exception, if any.
	 * @return string
	 */
	public function getCommand() {
		return $this->command;
	}
	
	/**
	 * Returns stderr output of the command that threw the exception, if any. 
	 * @return string
	 */
	public function getStdErr() {
		return $this->stderr;
	}
	
	/**
	 * Returns stdout output of the command that threw the exception, if any, or the Exception message
	 * on the other hand. 
	 * @return string
	 */
	public function getStdOut() {
		return parent::getMessage();
	}
	
	/**
	 * (non-PHPdoc)
	 * @see Exception::__toString()
	 */
	public function __toString() {
		return "AlizePHPException\nMessage: ".$this->getStdOut().
			"\nCommand: ".$this->getCommand().
			"\nError output: ".$this->getStdErr();
	}
}
